@using System.Linq;
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div id="bottomBars">
        @if ( _shipShield.IsValid() && _shipShield.CurrentHealth > 0f )
        {
            <FillBar Icon="offline_bolt" FillColor=@ShieldColor FillPercentGetter=@GetShieldPercent/>
        }
        <FillBar Icon="security" FillColor=@HullColor FillPercentGetter=@GetHullPercent/>
    </div>
</root>

@code
{
    [Property] public ShipController Ship { get; set; }
    [Property, Category("Style")] public Color ShieldColor { get; set; } = Color.Cyan;
    [Property, Category("Style")] public Color HullColor { get; set; } = Color.Red;

    private Shield _shipShield;
    private ShipHull _shipHull;

    protected override int BuildHash() => System.HashCode.Combine( ShieldColor, HullColor, _shipShield?.CurrentHealth, _shipHull?.CurrentHealth );

    protected override void OnStart()
    {
        var ship = Scene.GetAllComponents<ShipController>().FirstOrDefault();
        UpdateShip( ship );
    }

    public void UpdateShip( ShipController ship )
    {
        Ship = ship;
        _shipShield = Ship?.Components?.GetInDescendantsOrSelf<Shield>();
        _shipHull = Ship?.Components?.GetInDescendantsOrSelf<ShipHull>();
    }

    private float GetShieldPercent()
    {
        if ( !_shipShield.IsValid() )
            return 0f;

        return ( _shipShield.CurrentHealth / _shipShield.MaxHealth ) * 100f;
    }

    private float GetHullPercent()
    {
        if ( !_shipHull.IsValid() )
            return 0f;

        return ( _shipHull.CurrentHealth / _shipHull.MaxHealth ) * 100f;
    }
}
