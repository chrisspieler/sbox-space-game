@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root class=@( IsHidden ? "hidden" : "")>
	<div class="title">@Title</div>
    <div id="buttonList" class="column center-content">
        @if ( CareerInProgress is not null )
        {
            <div class="button continue column center-content" onclick=@(() => StartGame())>
                <h3>Continue Game</h3>
                <div>
                    <div class="credits">@CareerInProgress.Money CR</div>
                    <div class="playtime">@CareerInProgress.GetPlayTimeString()</div>
                </div>
            </div>
        }
        else
        {
            <div class="button" @onclick=@(() => StartGame())>New Game</div>
        }
        <div class="button" onclick=@OpenSettingsMenu>Settings</div>
        <div class="button" onclick=@OpenCreditsMenu>Credits</div>
        <div class="button" onclick=@Quit>Quit</div>
    </div>
</root>

@code
{

    [Property] public string Title { get; set; } = "Aluminum Acrobat";
    [Property] public SceneFile MainScene { get; set; }
    [Property] public Career CareerInProgress { get; set; }
    [Property] public Scenario DefaultScenario { get; set; }
    [Property] public PanelComponent SettingsMenu { get; set; }
    [Property] public PanelComponent CreditsMenu { get; set; }

    private bool IsHidden { get; set; } = true;

    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine( Title, IsHidden );

    protected override void OnStart()
    {
        base.OnStart();
        _ = Task.DelaySeconds(1f).ContinueWith( _ => IsHidden = false);
    }

    protected override void OnEnabled()
    {
        base.OnEnabled();

        Settings.LoadAndApply();
        SaveManager.ActiveFileName = string.Empty;
        // TODO: Find multiple slots.
        CareerInProgress = FindExistingSave(0);
    }

    private void StartGame()
    {
        if ( CareerInProgress is null)
        {
            var normalCareer = DefaultScenario.ToCareer();
            var fileName = SaveManager.GetSaveSlotFileName( 0 );
            SaveManager.SaveCareer( normalCareer, fileName );
        }
        // TODO: Allow for different save slots to be saved and loaded.
        SetActiveSave( 0 );
        Scene.Load( MainScene );
    }

    private Career FindExistingSave( int slot )
    {
        var fileName = SaveManager.GetSaveSlotFileName(0);
        Career career;
        SaveManager.TryLoadCareer(fileName, out career);
        return career;
    }

    private void SetActiveSave( int slot )
    {
        SaveManager.ActiveFileName = SaveManager.GetSaveSlotFileName(slot);
    }

    private void Quit()
    {
        Game.Close();
    }

    private void OpenSettingsMenu()
    {
        SettingsMenu.Enabled = true;
        Enabled = false;
    }

    private void OpenCreditsMenu()
    {
        CreditsMenu.Enabled = true;
        Enabled = false;
    }
}
